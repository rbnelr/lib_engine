DONE:
 
#2017.11.23 do. abend
 Got static linking of GLFW working
 -> have to compile as C as seperate .o/.obj file/s
 -> fastest complie (while always rebuilding all code) is to include all .c files into one .c file and compile that to a seperate .o/.obj file and link it to the main object
 -> unused function stripping works, ~90KB executable
 
#2017.11.24 fr. tag-nacht
 implement shader loading
 
 saving window positioning
 
 global VAO if VAO required
 
 added more shapes
 
 implement shader loading
 -> auto reload on file change with GetFileTime() polling per file
 
#2017.11.25 sa. nacht-tag
 implement cubemap skybox instead of clear color
 -generate this cubemap with a shader
 -write a nice looking skybox generator shader (try to look like a sky)
  -sky/ground/horizon_fog with fog slider
 
#2017.11.25 so. tag
 implement cubemap skybox instead of clear color
 -write a nice looking skybox generator shader (try to look like a sky)
  -added sun
 
 allow loading of multiple 'objects' in one .obj file
 -simply merge their meshes for now
 
 using inheritance now to allow one array of pointers to all shaders/meshes etc. while allowing those to by different in some ways via virtual functions
 -> might try to switch to tagged unions later
 
 reimplement generated meshes -> have radius, number of faces, etc. be a variable
 -one derived struct for each shape (or tagged union)
 -trigger reuploads on changes of these variables
 
#2017.11.27 mo. tag
 profilied .obj mesh_loader because it took minutes to load a simple mesh on the notebook
 replaced slow atof with my own simple implementation
 -> seems to work fine for my data set, at least visually
 
 added fov zoom and camera fly vel change by scrolling
 
 texture loading
 
TODO
-FEATURES:
 
 make fullscreen toggle switch to fullscreen on the main monitor the window is on
 
 debug text rendering (dbg_text_line() emits a line which starts at the bottom and goes )
 
 simple way of doing dynamic tweak variables
 -overlayed text editor to allow tweaking in fullscreen
  -> might easaly become easier to use and more flexible than external text format
 
 implement shader loading
 -probably will need $include command in shader
 
 tagged union instead of inheritance?
 
-BUGS:
 shader reloading sometimes broken?
 
 stuck wasd/space/ctrl movement sometimes
 -find reproducible case and log events i recieve
 